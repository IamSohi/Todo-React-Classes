{"version":3,"sources":["logo.svg","NewTodoForm.js","Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","props","state","task","handleChange","bind","handleSubmit","e","this","setState","target","name","value","preventDefault","createTodo","id","uuid","completed","className","onSubmit","htmlFor","type","placeholder","onChange","Component","Todo","idEditing","handleRemove","toggleForm","handleUpdate","handleToggle","removeTodo","isEditing","updateTodo","toggleTodo","onClick","class","TodoList","todos","create","remove","update","toggleCompletion","newTodo","filter","todo","updatedTask","updatedTodos","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ae8d918.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport { v4 as uuid } from 'uuid';\r\nimport './NewTodoForm.css'\r\nexport default class NewTodoForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { task: \"\" };\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.createTodo({ ...this.state, id: uuid(), completed: false })\r\n        this.setState({ task: \"\" })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"NewTodoForm\" onSubmit={this.handleSubmit} >\r\n                <label htmlFor=\"task\">New Todo</label>\r\n\r\n                <input\r\n                    name=\"task\"\r\n                    type=\"text\"\r\n                    placeholder=\"New Todo\"\r\n                    id=\"task\"\r\n                    value={this.state.task}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <button>Add Todo</button>\r\n\r\n\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Todo.css';\r\nexport default class Todo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idEditing: false,\r\n            task: this.props.task\r\n        }\r\n        this.handleRemove = this.handleRemove.bind(this)\r\n        this.toggleForm = this.toggleForm.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n        this.handleToggle = this.handleToggle.bind(this)\r\n    }\r\n    handleRemove() {\r\n        this.props.removeTodo(this.props.id)\r\n    }\r\n    toggleForm() {\r\n        this.setState({\r\n            isEditing: !this.state.isEditing\r\n        })\r\n    }\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleUpdate(e) {\r\n        e.preventDefault();\r\n        this.props.updateTodo(this.props.id, this.state.task)\r\n        this.setState({ isEditing: false });\r\n    }\r\n    handleToggle(e) {\r\n        this.props.toggleTodo(this.props.id)\r\n    }\r\n\r\n    render() {\r\n        let result;\r\n        if (this.state.isEditing) {\r\n            result = (<div className=\"Todo\">\r\n                <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\r\n                    <input type=\"text\"\r\n                        name=\"task\"\r\n                        value={this.state.task}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button>Save</button>\r\n                </form>\r\n            </div>)\r\n        } else {\r\n            result = (<div className=\"Todo\">\r\n                <li className={this.props.completed ? \"Todo-task completed\" : \"Todo-task\"}\r\n                    onClick={this.handleToggle}\r\n                >\r\n                    {this.props.task}</li>\r\n                <div className=\"Todo-buttons\">\r\n                    <button onClick={this.toggleForm}><i class=\"fas fa-pen\" /></button>\r\n                    <button onClick={this.handleRemove}><i class=\"fas fa-trash\" /></button>\r\n\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { renderIntoDocument } from 'react-dom/test-utils';\r\nimport NewTodoForm from './NewTodoForm';\r\nimport './TodoList.css';\r\nimport Todo from './Todo';\r\nexport default class TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { todos: [] }\r\n        this.create = this.create.bind(this)\r\n        this.remove = this.remove.bind(this)\r\n        this.update = this.update.bind(this)\r\n        this.toggleCompletion = this.toggleCompletion.bind(this)\r\n    }\r\n\r\n    create(newTodo) {\r\n        this.setState(\r\n            { todos: [...this.state.todos, newTodo] }\r\n        )\r\n    }\r\n    remove(id) {\r\n        this.setState({\r\n            todos: this.state.todos.filter(todo => (todo.id != id))\r\n        })\r\n    }\r\n    update(id, updatedTask) {\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return { ...todo, task: updatedTask }\r\n            }\r\n            return todo;\r\n        })\r\n        this.setState({ todos: updatedTodos })\r\n    }\r\n    toggleCompletion(id) {\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return { ...todo, completed: !todo.completed }\r\n            }\r\n            return todo;\r\n        })\r\n        this.setState({ todos: updatedTodos })\r\n\r\n    }\r\n    render() {\r\n        const todos = this.state.todos.map(item => (\r\n            <Todo key={item.id}\r\n                id={item.id}\r\n                task={item.task}\r\n                completed={item.completed}\r\n                removeTodo={this.remove}\r\n                updateTodo={this.update}\r\n                toggleTodo={this.toggleCompletion}\r\n\r\n            />\r\n        ))\r\n        return (\r\n            <div className=\"TodoList\">\r\n                <h1>React Todo List! <span>A Simple React Todo List App</span></h1>\r\n                <ul>\r\n                    {todos}\r\n                </ul>\r\n                <NewTodoForm createTodo={this.create} />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}